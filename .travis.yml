# 1. Install GCloud SDK + update kubectl
# 2. Configure SDK with GC auth info - generated a service account and encrypted it and pushed it to Travis using the Travis CLI
# 3. Login to docker cli
# 4. Build test version of multi-client
# 5. Run tests
# 6. If success run script to build images
# 7. Push images to docker hub
# 8. Apply changes in k8s - git ops - on each pusj to master. Git is always in sync with the cluster
# 9. Set latest images on each deployment
sudo: required
services:
  - docker
env:
  global: 
    - GIT_SHA=$(git rev-parse HEAD)
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1
before_install:
  - openssl aes-256-cbc -K $encrypted_a14841c42f12_key -iv $encrypted_a14841c42f12_iv -in multi-k8s-294316-7396803440cc.json.enc -out multi-k8s-294316-7396803440cc.json -d
  - curl https://sdk.cloud.google.com | bash > /dev/null;
  - source $HOME/google-cloud-sdk/path.bash.inc
  - gcloud components update kubectl
  - gcloud auth activate-service-account --key-file multi-k8s-294316-7396803440cc.json
  - gcloud config set project multi-k8s-294316
  - gcloud config set compute/zone europe-west2-b
  - glcoud container clusters get-credentials multi-cluster
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker build -t kiily/react-test -f ./client/Dockerfile.dev ./client

script:
  - docker run -e CI=true kiily/react-test npm test

# Passing a custom deployment script to travis
deploy:
  provider: script
  script: bash ./deploy.sh
  on:
    branch: master